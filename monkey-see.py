# Monkey See
# A proof of concept for Spoofing Leaderboard Scores on MonkeyType

import requests
import sys
import os
import json

url = "http://localhost:5001/monkeytpe-e428f/us-central1/testCompleted"

tot_chars_inp = 178 
corr_chars_inp = 178
wpm_inp = 141.5 
raw_wpm_inp = 142.3 
uid_inp = 'Sq9on6ebXRW6y2KOkGfEedc5FB62'


headers = {
    "sec-ch-ua": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"90\"",
    "Authorization": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjMwMjUxYWIxYTJmYzFkMzllNDMwMWNhYjc1OTZkNDQ5ZDgwNDI1ZjYiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoidHlsZXIiLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vbW9ua2V5dHBlLWU0MjhmIiwiYXVkIjoibW9ua2V5dHBlLWU0MjhmIiwiYXV0aF90aW1lIjoxNjIyMDc2NjEyLCJ1c2VyX2lkIjoiU3E5b242ZWJYUlc2eTJLT2tHZkVlZGM1RkI2MiIsInN1YiI6IlNxOW9uNmViWFJXNnkyS09rR2ZFZWRjNUZCNjIiLCJpYXQiOjE2MjIwNzY2MTIsImV4cCI6MTYyMjA4MDIxMiwiZW1haWwiOiJ0Y2J1dGxlcjMyMEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJ0Y2J1dGxlcjMyMEBnbWFpbC5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.SrySy5xDEKdHKGzZF5_AZcDuKiq4cqoqYKpH2snsXxrzyFWXrBIs_-2tkihFbPAIMROSy4gMpbxXabkpaQhV8x9eoAg0FOmWqPaImr_IT22hp13inIjR9lnNhQM-G22jefvza3Aa_9lrpJkpt5OUu_PgRO2RknZM7NsXGLGP3_8CH_RKJ8NtNo19sSiz8uGy7KOksQP6R_vVweuQ2TqB8gq7V-DQk5KK7TRNv_By_Nc0Jw4s9ocN5ge5fIFvnRLxHfp1X3fj8u3_h-a87KB05iD61lNkuz0uaafieBm5GSkDpnpEMDZrUH50y1WHNY2JR9zVLW7o8vk7L9pav199WQ", 
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36", 
    "Content-Type": "application/json", 
    "Accept": "*/*", 
    "Origin": "http://localhost:5000", 
    "Referer": "http://localhost:5000/", 
    "Accept-Encoding": "gzip, deflate", 
    "Accept-Language": "en-US,en;q=0.9", 
    "Connection": "close"
    }


body={"data": 
    {"obj": 
        {"acc": 92.97, 
        "allChars": tot_chars_inp, 
        "chartData": 
            {"raw": [120, 108, 112, 104, 120, 104, 104, 96, 100, 92, 96, 100, 108, 92, 90], 
             "wpm": [48, 102, 88, 102, 91, 108, 99, 99, 103, 98, 95, 95, 91, 89, 87]
             }, 
        "correctChars": corr_chars_inp, 
        "incorrectChars": 0, 
        "keySpacing": [111.2249999987398, 101.79500000049302, 73.88499999979103, 150.3900000006979, 142.85000000018044, 79.26500000030501, 68.74499999867112, 182.040000001507, 185.97999999838066, 106.65500000141037, 43.73999999916123, 163.03999999945518, 83.87500000026193, 52.405000000362634, 39.389999999912106, 132.55500000013853, 43.525000000954606, 146.40499999950407, 51.33000000023458, 222.39999999874271, 97.83500000048662, 83.01500000015949, 104.16000000077474, 112.9449999989447, 28.70500000062748, 171.7449999996461, 106.20999999991909, 40.06499999923108, 103.22500000074797, 104.85999999946216, 111.63500000111526, 155.01000000040221, 84.26499999950465, 70.93499999973574, 136.7049999989831, 15.765000000101281, 143.71500000015658, 95.91999999975087, 113.39500000030966, 108.47500000090804, 92.01500000017404, 122.91000000004715, 128.52999999995518, 88.06000000004133, 144.5850000000064, 134.65999999971245, 75.73500000034983, 56.66500000006636, 53.71500000001106, 193.86999999915133, 43.51499999938824, 40.010000000620494, 159.45000000101572, 203.37999999901513, 35.62500000043656, 43.81999999895925, 138.35000000108266, 63.55499999881431, 162.20000000066648, 78.67000000078406, 76.34499999949185, 104.51499999908265, 188.26500000068336, 179.21500000011292, 336.06499999950756, 66.60999999985506, 81.71500000025844, 82.4350000002596, 52.110000000539, 115.99999999998545, 107.64500000004773, 130.6349999995291, 156.65500000068278, 61.555000000225846, 63.6899999990419, 106.46000000087952, 72.06999999834807, 136.56000000082713, 109.22000000027765, 181.88999999983935, 93.76999999949476, 84.41000000129861, 53.374999999505235, 158.4000000002561, 137.1999999992113, 119.12499999925785, 58.98000000161119, 47.509999998510466, 172.1350000007078, 74.95999999991909, 450.05999999921187, 47.85000000083528, 146.28000000084285, 54.569999998420826, 131.87000000107219, 128.06499999896914, 95.81000000071072, 318.25000000026193, 75.51500000045053, 46.539999999367865, 139.73500000065542, 169.1899999987072, 164.42500000084692, 50.80499999894528, 55.915000000823056, 120.97999999969034, 50.41499999970256, 360.5700000007346, 94.60000000035507, 84.76499999960652, 99.93000000031316, 141.1100000004808, 97.89999999884458, 112.26499999975204, 108.7550000011106, 91.1099999993894, 59.755000000222935, 250.84500000048138, 153.519999999844, 67.92499999937718, 36.014999999679276, 154.12000000105763, 127.55999999899359, 47.440000000278815, 146.4849999993021, 82.3049999999057, 140.16500000070664, 404.4100000010076, 104.95499999888125, 110.21500000060769, 40.160000000469154], "language": "english", "mode": "time", "mode2": 15, "rawWpm": raw_wpm_inp, "tags": [], "uid": uid_inp, "wpm": wpm_inp}, "uid": uid_inp}}

# Post Test Data to Server
def make_request():
    contains_four = False

    print('{!} Tossing peels, aiming for WPM of ', wpm_inp)

    try:    
        res = requests.post(url, headers=headers, json=body)
        out = res.text

        for character in out:
            if character == '4':
                contains_four = True
        
        if contains_four:
            print('{X} Woops, we got caught ...')
        else:
            print('{!} Welcome to the leaderboard!')

       
    except requests.exceptions.RequestException as e:  # This is the correct syntax
        print('{X} Woops, something when awry ...')
        sys.exit(0)
    return 

def main():
    print('''
      /~\\
     C oo
     _( ^)
    /   ~\\
    tbutler
   
    ''')
    print('{!} Eating Bananas ...')
    make_request()

main()